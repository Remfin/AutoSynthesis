<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AutoSynthesis"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="AutoSynthesis.MainWindow"
        mc:Ignorable="d"
        Title="AutoSynthesis" 
        SizeToContent="WidthAndHeight" 
        ResizeMode="CanMinimize" 
        HorizontalAlignment="Center" 
        VerticalAlignment="Center" 
        Icon="Resources/Icon/Icon.png" Closing="Window_Closing">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--
        Default Background For Buttons: 121212
        Default Border for Buttons: DCEDFF
        Default Text Color: DCEDFF
        Default Highlighted Background: 292929
        Click: 5c5863
        -->

        <!--
        Base Color: #201834
        Highlighted: #2f2842
        Pressed: #231e30
        -->

        <!--#region ComboBox Style -->
        <SolidColorBrush x:Key="ComboBox.Static.Background" Color="#201834"/>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#DCEDFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="Black"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>

        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Background" Color="#2f2842"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>

        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Background" Color="#231e30"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>

        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>

        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="1" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1,1,1.4,0.8" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}" Margin="0,0,0.4,-0.2"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="6,3,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxNewStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <SolidColorBrush x:Key="ComboBoxItem.Itemsview.Background" Color="#121212"/>
        <SolidColorBrush x:Key="ComboBoxItem.Itemsview.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#292929"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#3d334d"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#3d334d"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#3d334d"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#5c5863"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="{StaticResource ComboBoxItem.Itemsview.Background}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.Itemsview.Border}"/>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.Itemsview.Background}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.Itemsview.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion -->

        <!--#region Button Style-->

        <!-- Required states: Base, ActiveCrafting, Processing -->

        <!-- Crafting -->
        <SolidColorBrush x:Key="Button.Crafting.Static.Background" Color="#4f0c1d"/>
        <SolidColorBrush x:Key="Button.Crafting.Static.Border" Color="#DCEDFF"/>
        <SolidColorBrush x:Key="Button.Crafting.MouseOver.Background" Color="#991436"/>
        <SolidColorBrush x:Key="Button.Crafting.MouseOver.Border" Color="#DCEDFF"/>
        <SolidColorBrush x:Key="Button.Crafting.Focused.Border" Color="#a2cefc"/>
        <SolidColorBrush x:Key="Button.Crafting.Pressed.Background" Color="#380815"/>
        <SolidColorBrush x:Key="Button.Crafting.Pressed.Border" Color="#DCEDFF"/>
        <SolidColorBrush x:Key="Button.Crafting.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Crafting.Disabled.Border" Color="#DCEDFF"/>
        <SolidColorBrush x:Key="Button.Crafting.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyleCrafting" TargetType="{x:Type Button}" x:Name="ButtonStyleCrafting">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Crafting.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Crafting.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Crafting.Focused.Border}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Crafting.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Crafting.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Crafting.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Crafting.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Crafting.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Crafting.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Crafting.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Processing -->
        <SolidColorBrush x:Key="Button.Processing.Static.Background" Color="#4f4f4f"/>
        <SolidColorBrush x:Key="Button.Processing.Static.Border" Color="#DCEDFF"/>
        <SolidColorBrush x:Key="Button.Processing.MouseOver.Background" Color="#666666"/>
        <SolidColorBrush x:Key="Button.Processing.MouseOver.Border" Color="#DCEDFF"/>
        <SolidColorBrush x:Key="Button.Processing.Pressed.Background" Color="#4d4d4d"/>
        <SolidColorBrush x:Key="Button.Processing.Pressed.Border" Color="#DCEDFF"/>
        <SolidColorBrush x:Key="Button.Processing.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Processing.Disabled.Border" Color="#DCEDFF"/>
        <SolidColorBrush x:Key="Button.Processing.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyleProcessing" TargetType="{x:Type Button}" x:Name="ButtonStyleProcessing">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Processing.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Processing.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Processing.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Processing.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Processing.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Processing.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Processing.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Processing.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Processing.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Processing.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Processing.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Idle -->
        <SolidColorBrush x:Key="Button.Static.Background" Color="#201834"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#DCEDFF"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#2f2842"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#DCEDFF"/>
        <SolidColorBrush x:Key="Button.Focus.Border" Color="#a2cefc"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#231e30"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#DCEDFF"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#DCEDFF"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyleIdle" TargetType="{x:Type Button}" x:Name="ButtonStyleIdle">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Focus.Border}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->
    </Window.Resources>
    <Window.Background>
        <ImageBrush ImageSource="Resources/Images/Background/Background 3.png"/>
    </Window.Background>

    <Grid x:Name="MainWindowGrid" Margin="0" KeyboardNavigation.TabNavigation="Continue" Width="575" HorizontalAlignment="Center" VerticalAlignment="Center" Height="395">
        <Grid.Background>
            <ImageBrush ImageSource="Resources/Images/Background/Background 3.png"/>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="70"/>
            <RowDefinition x:Name="RowContainers" Height="235"/>
            <RowDefinition Height="90"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="320"/>
            <ColumnDefinition Width="255"/>
        </Grid.ColumnDefinitions>

        <!-- TITLE -->
        <Label x:Name="LabelTitle" Content="AutoSynthesis" Margin="195,10,0,0" VerticalAlignment="Top" Height="55" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0" VerticalContentAlignment="Center" FontSize="36" FontWeight="Bold" Foreground="#FFDCEDFF" HorizontalContentAlignment="Center" Width="250" HorizontalAlignment="Left" Grid.ColumnSpan="2">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="1"/>
            </Label.Effect>
        </Label>

        <!-- MACRO 1 -->
        <Label x:Name="LabelMacros" Content="Macros" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Top" Height="25" Width="75" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0" VerticalContentAlignment="Center" FontSize="20" FontWeight="Bold" Grid.Row="1" Foreground="#FFDCEDFF">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="1"/>
            </Label.Effect>
        </Label>
        <Label x:Name="LabelMacrosTime" Content="Macro Time (sec)" Margin="200,0,0,0.3" VerticalAlignment="Top" Height="25" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0" VerticalContentAlignment="Bottom" HorizontalContentAlignment="Right" Grid.Row="1" HorizontalAlignment="Left" Width="110" Foreground="#FFDCEDFF">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="1"/>
            </Label.Effect>
        </Label>
        <Label x:Name="LabelMacro1" Content="Macro 1" HorizontalAlignment="Left" Margin="10,25,0,0" VerticalAlignment="Top" Height="25" Width="75" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0" VerticalContentAlignment="Center" FontSize="17" Grid.Row="1" Foreground="#FFDCEDFF">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="1"/>
            </Label.Effect>
        </Label>
        <TextBox x:Name="TXBMacro1Key" HorizontalAlignment="Left" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Height="25" Margin="105,25,0,0" VerticalAlignment="Top" Width="170" IsReadOnly="True" PreviewKeyDown="HotkeyKeyDown" PreviewKeyUp="HotkeyKeyUp" GotFocus="HotkeyTextboxGainFocus" LostFocus="HotkeyTextboxLoseFocus" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" MaxLines="1" Grid.Row="1" Opacity="0.9" Background="#FFDCEDFF" TextChanged="InputTextChange" FontSize="16" MouseDoubleClick="HotkeyInputDoubleClick"/>
        <TextBox x:Name="TXBMacro1Timer" HorizontalAlignment="Left" Height="25" Margin="280,25,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="30" IsReadOnly="True" KeyDown="SetTimeValue" GotFocus="TimeGetFocus" LostFocus="TimeLostFocus" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom" FontSize="16" Grid.Row="1" Opacity="0.9" Background="#FFDCEDFF" Text="0"/>

        <!-- MACRO 2 -->
        <Label x:Name="LabelMacro2" Content="Macro 2" HorizontalAlignment="Left" Margin="10,55,0,0" VerticalAlignment="Top" Height="25" Width="75" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0" VerticalContentAlignment="Center" FontSize="17" Grid.Row="1" Foreground="#FFDCEDFF">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="1"/>
            </Label.Effect>
        </Label>
        <CheckBox x:Name="CHBMacro2" Content="" HorizontalAlignment="Left" Margin="85,55,0,0" VerticalAlignment="Top" Height="25" Width="20" Checked="CHBMacro2_Checked" Unchecked="CHBMacro2_Checked" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0" VerticalContentAlignment="Center" BorderThickness="1" ClipToBounds="True" HorizontalContentAlignment="Center" Grid.Row="1" Opacity="0.9" Background="#FFDCEDFF" GotFocus="CheckFocusGain" LostFocus="CheckFocusLoss"/>
        <TextBox x:Name="TXBMacro2Key" MouseDoubleClick="HotkeyInputDoubleClick" TextChanged="InputTextChange" HorizontalAlignment="Left" Height="25" Margin="105,55,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="170" IsReadOnly="True" PreviewKeyDown="HotkeyKeyDown" PreviewKeyUp="HotkeyKeyUp" GotFocus="HotkeyTextboxGainFocus" LostFocus="HotkeyTextboxLoseFocus" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" Grid.Row="1" Opacity="0.9" Background="#FFDCEDFF" IsEnabled="False"/>
        <TextBox x:Name="TXBMacro2Timer" HorizontalAlignment="Left" Height="25" Margin="280,55,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="30" IsReadOnly="True" KeyDown="SetTimeValue" GotFocus="TimeGetFocus" LostFocus="TimeLostFocus" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom" FontSize="16" Grid.Row="1" Opacity="0.9" Background="#FFDCEDFF" IsEnabled="False" Text="0"/>

        <!-- MACRO 3 -->
        <Label x:Name="LabelMacro3" Content="Macro 3" HorizontalAlignment="Left" Margin="10,85,0,0" VerticalAlignment="Top" Height="25" Width="75" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0" VerticalContentAlignment="Center" FontSize="17" Grid.Row="1" Foreground="#FFDCEDFF">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="1"/>
            </Label.Effect>
        </Label>
        <CheckBox x:Name="CHBMacro3" GotFocus="CheckFocusGain" LostFocus="CheckFocusLoss" Content="" HorizontalAlignment="Left" Margin="85,85,0,0" VerticalAlignment="Top" Height="25" Width="20" Checked="CHBMacro3_Checked" Unchecked="CHBMacro3_Checked" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Grid.Row="1" Opacity="0.9" Background="#FFDCEDFF"/>
        <TextBox x:Name="TXBMacro3Key" MouseDoubleClick="HotkeyInputDoubleClick" TextChanged="InputTextChange" HorizontalAlignment="Left" Height="25" Margin="105,85,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="170" IsReadOnly="True" PreviewKeyDown="HotkeyKeyDown" PreviewKeyUp="HotkeyKeyUp" GotFocus="HotkeyTextboxGainFocus" LostFocus="HotkeyTextboxLoseFocus" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" Grid.Row="1" Opacity="0.9" Background="#FFDCEDFF" IsEnabled="False"/>
        <TextBox x:Name="TXBMacro3Timer" HorizontalAlignment="Left" Height="25" Margin="280,85,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="30" IsReadOnly="True" KeyDown="SetTimeValue" GotFocus="TimeGetFocus" LostFocus="TimeLostFocus" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom" FontSize="16" Grid.Row="1" Opacity="0.9" Background="#FFDCEDFF" IsEnabled="False" Text="0"/>

        <!-- Food -->
        <Label x:Name="LabelConsumables" Content="Consumables" HorizontalAlignment="Left" Margin="10,120,0,0" VerticalAlignment="Top" Height="25" Width="129" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0" VerticalContentAlignment="Center" FontSize="20" FontWeight="Bold" Grid.Row="1" Foreground="#FFDCEDFF">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="1"/>
            </Label.Effect>
        </Label>
        <Label x:Name="LabelFoodTime" Content="Time Remaining (min)" Margin="167,119.6,0,0" VerticalAlignment="Top" Height="25" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0" VerticalContentAlignment="Bottom" HorizontalContentAlignment="Right" Grid.Row="1" HorizontalAlignment="Left" Width="143" Foreground="#FFDCEDFF">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="1"/>
            </Label.Effect>
        </Label>
        <Label x:Name="LabelFood" Content="Food" HorizontalAlignment="Left" Margin="10,145,0,0" VerticalAlignment="Top" Height="25" Width="75" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0" VerticalContentAlignment="Center" FontSize="17" Grid.Row="1" Foreground="#FFDCEDFF">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="1"/>
            </Label.Effect>
        </Label>
        <CheckBox x:Name="CHBFood" GotFocus="CheckFocusGain" LostFocus="CheckFocusLoss" Content="" HorizontalAlignment="Left" Margin="85,145,0,0" VerticalAlignment="Top" Height="25" Width="20" Checked="CHBFood_Checked" Unchecked="CHBFood_Checked" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0" Grid.Row="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Opacity="0.9" Background="#FFDCEDFF"/>
        <TextBox x:Name="TXBFoodKey" MouseDoubleClick="HotkeyInputDoubleClick" TextChanged="InputTextChange" HorizontalAlignment="Left" Height="25" Margin="105,145,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="170" IsReadOnly="True" PreviewKeyDown="HotkeyKeyDown" PreviewKeyUp="HotkeyKeyUp" GotFocus="HotkeyTextboxGainFocus" LostFocus="HotkeyTextboxLoseFocus" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" Grid.Row="1" Opacity="0.9" Background="#FFDCEDFF" IsEnabled="False"/>
        <TextBox x:Name="TXBFoodTimer" HorizontalAlignment="Left" Height="26" Margin="280,145,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="30" IsReadOnly="True" KeyDown="SetTimeValue" GotFocus="TimeGetFocus" LostFocus="TimeLostFocus" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" Grid.Row="1" Opacity="0.9" Background="#FFDCEDFF" IsEnabled="False" Text="0"/>

        <!-- Syrup -->
        <Label x:Name="LabelSyrup" Content="Syrup" HorizontalAlignment="Left" Margin="10,175,0,0" VerticalAlignment="Top" Height="25" Width="75" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0" VerticalContentAlignment="Center" FontSize="17" Grid.Row="1" Foreground="#FFDCEDFF">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="1"/>
            </Label.Effect>
        </Label>
        <CheckBox x:Name="CHBSyrup" GotFocus="CheckFocusGain" LostFocus="CheckFocusLoss" Content="" HorizontalAlignment="Left" Margin="85,175,0,0" VerticalAlignment="Top" Height="25" Width="20" Checked="CHBSyrup_Checked" Unchecked="CHBSyrup_Checked" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0" Grid.Row="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Opacity="0.9" Background="#FFDCEDFF"/>
        <TextBox x:Name="TXBSyrupKey" MouseDoubleClick="HotkeyInputDoubleClick" TextChanged="InputTextChange" HorizontalAlignment="Left" Height="25" Margin="105,175,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="170" IsReadOnly="True" PreviewKeyDown="HotkeyKeyDown" PreviewKeyUp="HotkeyKeyUp" GotFocus="HotkeyTextboxGainFocus" LostFocus="HotkeyTextboxLoseFocus" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" Grid.Row="1" Opacity="0.9" Background="#FFDCEDFF" IsEnabled="False"/>
        <TextBox x:Name="TXBSyrupTimer" HorizontalAlignment="Left" Height="25" Margin="280,175,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="30" IsReadOnly="True" KeyDown="SetTimeValue" GotFocus="TimeGetFocus" LostFocus="TimeLostFocus" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" Grid.Row="1" Opacity="0.9" Background="#FFDCEDFF" IsEnabled="False" Text="0"/>

        <!-- Food Duration -->
        <Label x:Name="LabelFoodTimer" Content="Food Duration" HorizontalAlignment="Left" Margin="10,205,0,0" VerticalAlignment="Top" Height="25" Width="129" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0" VerticalContentAlignment="Center" FontSize="17" Grid.Row="1" Foreground="#FFDCEDFF">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="1"/>
            </Label.Effect>
        </Label>
        <RadioButton x:Name="RDFood30" GotFocus="CheckRadioGain" LostFocus="CheckRadioLoss"  Content="30 Min" HorizontalAlignment="Left" Margin="135,205,0,0" VerticalAlignment="Top" Width="55" GroupName="RDFoodTimer" IsChecked="True" Checked="RDFood30_Checked" Height="25" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Grid.Row="1" VerticalContentAlignment="Center" Padding="0,1,0,0" Foreground="#FFDCEDFF" FontSize="13" Background="#FFDCEDFF">
            <RadioButton.Effect>
                <DropShadowEffect ShadowDepth="1" BlurRadius="1"/>
            </RadioButton.Effect>
        </RadioButton>
        <RadioButton x:Name="RDFood40" GotFocus="CheckRadioGain" LostFocus="CheckRadioLoss" Content="40 Min" HorizontalAlignment="Left" Margin="195,205,0,0" VerticalAlignment="Top" Width="55" GroupName="RDFoodTimer" Checked="RDFood40_Checked" Height="25" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Grid.Row="1" VerticalContentAlignment="Center" Padding="0,1,0,0" Foreground="#FFDCEDFF" FontSize="13" Background="#FFDCEDFF">
            <RadioButton.Effect>
                <DropShadowEffect ShadowDepth="1" BlurRadius="1"/>
            </RadioButton.Effect>
        </RadioButton>
        <RadioButton x:Name="RDFood45" GotFocus="CheckRadioGain" LostFocus="CheckRadioLoss" Content="45 Min" HorizontalAlignment="Left" Margin="255,205,0,0" VerticalAlignment="Top" Width="55" GroupName="RDFoodTimer" Checked="RDFood45_Checked" Height="25" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Grid.Row="1" VerticalContentAlignment="Center" Padding="0,1,0,0" Foreground="#FFDCEDFF" FontSize="13" Background="#FFDCEDFF">
            <RadioButton.Effect>
                <DropShadowEffect ShadowDepth="1" BlurRadius="1"/>
            </RadioButton.Effect>
        </RadioButton>

        <!-- Confirm -->
        <Label x:Name="LabelSelectConfirm" Content="Confirm" HorizontalAlignment="Left" Margin="0,25,0,0" VerticalAlignment="Top" Height="25" Width="75" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" VerticalContentAlignment="Center" FontSize="17" Grid.Row="1" Grid.Column="1" Padding="0" Foreground="#FFDCEDFF">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="1"/>
            </Label.Effect>
        </Label>
        <TextBox x:Name="TXBConfirmKey" MouseDoubleClick="HotkeyInputDoubleClick" TextChanged="InputTextChange" HorizontalAlignment="Left" Height="25" Margin="75,25,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="169" IsReadOnly="True" PreviewKeyDown="HotkeyKeyDown" PreviewKeyUp="HotkeyKeyUp" GotFocus="HotkeyTextboxGainFocus" LostFocus="HotkeyTextboxLoseFocus" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Grid.Row="1" Grid.Column="1" FontSize="16" Opacity="0.9" Background="#FFDCEDFF"/>

        <!-- Cancel -->
        <Label x:Name="LabelCancel" Content="Cancel" HorizontalAlignment="Left" Margin="0,55,0,0" VerticalAlignment="Top" Height="25" Width="75" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" VerticalContentAlignment="Center" FontSize="17" Grid.Row="1" Grid.Column="1" Padding="0" Foreground="#FFDCEDFF">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="1"/>
            </Label.Effect>
        </Label>
        <TextBox x:Name="TXBCancelKey" MouseDoubleClick="HotkeyInputDoubleClick" TextChanged="InputTextChange" HorizontalAlignment="Left" Height="25" Margin="75,55,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="169" IsReadOnly="True" PreviewKeyDown="HotkeyKeyDown" PreviewKeyUp="HotkeyKeyUp" GotFocus="HotkeyTextboxGainFocus" LostFocus="HotkeyTextboxLoseFocus" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Grid.Row="1" Grid.Column="1" FontSize="16" Opacity="0.9" Background="#FFDCEDFF" IsEnabled="False"/>

        <!-- Settings -->
        <Label x:Name="LabelSettings" Content="Settings" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Height="25" Width="95" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0,0,0,1" VerticalContentAlignment="Center" FontSize="20" FontWeight="Bold" Grid.Column="1" Foreground="#FFDCEDFF" Grid.Row="1">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="1"/>
            </Label.Effect>
        </Label>
        <Label x:Name="LabelCraftCount" Content="Craft Count" HorizontalAlignment="Left" Margin="0,85,0,0" VerticalAlignment="Top" Height="25" Width="98" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" VerticalContentAlignment="Center" FontSize="17" Grid.Row="1" Grid.Column="1" Padding="0" Foreground="#FFDCEDFF">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="1"/>
            </Label.Effect>
        </Label>
        <CheckBox x:Name="CHBCraftCount" GotFocus="CheckFocusGain" LostFocus="CheckFocusLoss" Content="" HorizontalAlignment="Left" Margin="105,85,0,0" VerticalAlignment="Top" Height="25" Width="20" Checked="CHBCraftCount_Checked" Unchecked="CHBCraftCount_Checked" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0" Grid.Row="1" Grid.Column="1" VerticalContentAlignment="Center" Opacity="0.9" Background="#FFDCEDFF"/>
        <TextBox x:Name="TXBCraftCount" HorizontalAlignment="Left" Height="25" Margin="130,85,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="59" IsReadOnly="True" KeyDown="SetTimeValue" GotFocus="TimeGetFocus" LostFocus="TimeLostFocus" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Grid.Row="1" Grid.Column="1" FontSize="16" Opacity="0.9" Background="#FFDCEDFF" IsEnabled="False" Text="0"/>
        <Label x:Name="LabelCollectableCraft" Content="Collectable Craft" HorizontalAlignment="Left" Margin="0,115,0,0" VerticalAlignment="Top" Height="25" Width="137" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" VerticalContentAlignment="Center" FontSize="17" Grid.Row="1" Grid.Column="1" Padding="0" Foreground="#FFDCEDFF">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="1"/>
            </Label.Effect>
        </Label>
        <CheckBox x:Name="CHBCollectableCraft" GotFocus="CheckFocusGain" LostFocus="CheckFocusLoss" Content="" HorizontalAlignment="Left" Margin="145,115,0,0" VerticalAlignment="Top" Height="25" Width="20" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Grid.Row="1" Grid.Column="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Opacity="0.9" Background="#FFDCEDFF"/>

        <!-- Profile Systems -->
        <Label x:Name="LabelProfiles" Content="Profiles" HorizontalAlignment="Left" Margin="0,150,0,0" VerticalAlignment="Top" Height="25" Width="95" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Padding="0" VerticalContentAlignment="Center" FontSize="20" FontWeight="Bold" Grid.Row="1" Grid.Column="1" Foreground="#FFDCEDFF">
            <Label.Effect>
                <DropShadowEffect ShadowDepth="1"/>
            </Label.Effect>
        </Label>
        <ComboBox x:Name="CMBProfileList" HorizontalAlignment="Left" Margin="0,175,0,0" VerticalAlignment="Top" Width="246" Height="25" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Grid.Row="1" Grid.Column="1" Opacity="0.85" BorderBrush="Black" Foreground="#FFBFDDFD" Background="#FFFF4D4D" Style="{DynamicResource ComboBoxNewStyle}" VerticalContentAlignment="Center" Padding="0" ItemContainerStyle="{DynamicResource ComboBoxItemStyle1}" FontSize="14"/>
        <Button x:Name="BTNSave" Content="Save" HorizontalAlignment="Left" Margin="0,205,0,0" VerticalAlignment="Top" Width="68" Click="BTNSave_Click" Height="25" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Grid.Row="1" Grid.Column="1" Opacity="0.85" Style="{DynamicResource ButtonStyleIdle}" Foreground="#FFDCEDFF" FontSize="14" />
        <Button x:Name="BTNLoad" Content="Load" HorizontalAlignment="Left" Margin="74,205,0,0" VerticalAlignment="Top" Width="68" Click="BTNLoad_Click" Height="25" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Grid.Row="1" Grid.Column="1" Opacity="0.85" Style="{DynamicResource ButtonStyleIdle}" Foreground="#FFDCEDFF" FontSize="14" />
        <Button x:Name="BTNDelete" Content="Delete" HorizontalAlignment="Left" Margin="148,205,0,0" VerticalAlignment="Top" Width="68" Click="BTNDelete_Click" Height="25" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Grid.Row="1" Grid.Column="1" Opacity="0.85" Style="{DynamicResource ButtonStyleIdle}" Foreground="#FFDCEDFF" FontSize="14" />


        <!-- Help -->
        <Label x:Name="LBLHelp" Content="" Grid.Column="1" Margin="221,205,0,0" VerticalAlignment="Top" Height="25" HorizontalAlignment="Left" Width="25" MouseEnter="LBLHelp_MouseEnter" MouseLeave="LBLHelp_MouseLeave" MouseDown="LBLHelp_MouseDown" MouseUp="LBLHelp_MouseUp" Grid.Row="1" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen">
            <Label.Background>
                <ImageBrush ImageSource="Resources/Images/Background/InfoUnhighlighted.png">
                    <ImageBrush.RelativeTransform>
                        <TransformGroup>
                            <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="0.9" ScaleY="0.9"/>
                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                            <RotateTransform CenterY="0.5" CenterX="0.5"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </ImageBrush.RelativeTransform>
                </ImageBrush>
            </Label.Background>
        </Label>

        <!-- Buttons -->
        <Button x:Name="BTNCraft" Content="Start" HorizontalAlignment="Left" Margin="10,10,0,0" Width="100" Click="BTNCraftInitiate" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Grid.Row="2" Height="70" VerticalAlignment="Top" Style="{DynamicResource ButtonStyleIdle}" FontSize="18" Padding="0" Foreground="#FFDCEDFF"/>

        <!-- Status -->
        <ProgressBar x:Name="PGBOverall" HorizontalAlignment="Left" Height="20" Margin="115,10,0,0" VerticalAlignment="Top" Width="195" Maximum="1000" Background="#FF2B2B2B" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Grid.Row="2" BorderBrush="{x:Null}" Foreground="#FFA60732"/>
        <ProgressBar x:Name="PGBCraft" HorizontalAlignment="Left" Height="20" Margin="115,35,0,0" VerticalAlignment="Top" Width="195" Maximum="1000" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Grid.Row="2" Background="#FF2B2B2B" Foreground="#FF00B1FF" BorderBrush="{x:Null}"/>
        <ProgressBar x:Name="PGBMacro" HorizontalAlignment="Left" Margin="115,60,0,0" Width="195" Maximum="1000" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Height="20" VerticalAlignment="Top" Grid.Row="2" Background="#FF2B2B2B" Foreground="#FF7400FF" BorderBrush="{x:Null}"/>
        <Label x:Name="LBLBackdrop" Content="" HorizontalAlignment="Left" Margin="0,10.4,0,0" VerticalAlignment="Top" Background="Black" Height="69" Width="246" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Grid.Row="2" Grid.Column="1" Padding="2,0" VerticalContentAlignment="Center" Foreground="#FFDCEDFF" Opacity="0.75"/>
        <Label x:Name="LBLUpdate" Content="" HorizontalAlignment="Left" Margin="0,10,0,0" VerticalAlignment="Top" Background="Black" Height="20" Width="246" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Grid.Row="2" Grid.Column="1" Padding="2,0" VerticalContentAlignment="Center" Foreground="#FFDCEDFF" Opacity="0.75"/>
        <Label x:Name="LBLCraftNumber" Content="Crafted: 99/99" Margin="0,10,10,0" VerticalAlignment="Top" Background="#7FFFFFFF" Height="20" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Grid.Row="2" Padding="0,1,5,0" VerticalContentAlignment="Center" Foreground="Black" HorizontalContentAlignment="Right" HorizontalAlignment="Right" Width="90" BorderThickness="1" Visibility="Hidden"/>
        <Label x:Name="LBLUpdateFooter" Content="" HorizontalAlignment="Left" Margin="0,35,0,0" VerticalAlignment="Top" Background="Black" Height="20" Width="246" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Grid.Row="2" Grid.Column="1" Padding="2,0" Foreground="#FFDCEDFF" Opacity="0.75" VerticalContentAlignment="Center"/>

        <Label x:Name="LBLTimerMacro" Content="Macro 3: 0:00" Margin="0,60,10,0" Grid.Row="2" VerticalAlignment="Top" Height="20" Padding="0,1,5,0" VerticalContentAlignment="Center" HorizontalContentAlignment="Right" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" BorderThickness="1" HorizontalAlignment="Right" Width="90" Background="#7FFFFFFF" Visibility="Hidden"/>
        <Label x:Name="LBLTimerCraft" Content="Craft 999: 0:00" Margin="0,35,10,0" Grid.Row="2" VerticalAlignment="Top" Height="20" Padding="0,1,5,0" VerticalContentAlignment="Center" HorizontalContentAlignment="Right" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" BorderThickness="1" HorizontalAlignment="Right" Width="90" Background="#7FFFFFFF" Visibility="Hidden"/>
        <Label x:Name="LBLFoodSyrupTimer" Content="" HorizontalAlignment="Left" Margin="0,60,0,0" VerticalAlignment="Top" Background="Black" Height="20" Width="246" FontFamily="/AutoSynthesis;component/Resources/Fonts/#Sen" Grid.Row="2" Grid.Column="1" Padding="2,0" VerticalContentAlignment="Center" Foreground="#FFDCEDFF" Opacity="0.75"/>
        <Label Content="" HorizontalAlignment="Left" Margin="140,12,0,0" VerticalAlignment="Top" Height="55" Width="55">
            <Label.Background>
                <ImageBrush ImageSource="Resources/Icon/Icon.png"/>
            </Label.Background>
        </Label>
        <Label x:Name="Minimize_Label" Content="" Grid.Column="1" HorizontalAlignment="Left" Margin="221,2,0,0" VerticalAlignment="Top" Width="15" Height="15" Opacity="0.5" MouseEnter="MinimizeLabelMouseEnter" MouseLeave="MinimizeLabelMouseExit" MouseDown="MinimizeLabelMouseDown" MouseUp="MinimizeLabelMouseUp" ToolTip="Minimize To Tray">
            <Label.Background>
                <ImageBrush ImageSource="Resources/Images/Buttons/Minimize to Tray.png"/>
            </Label.Background>
        </Label>
        <Label x:Name="AlwaysOnTop_Label" Content="" Grid.Column="1" HorizontalAlignment="Left" Margin="238,2,0,0" VerticalAlignment="Top" Width="15" Height="15" Opacity="0.5" MouseEnter="AlwaysOnTopLabelMouseEnter" MouseLeave="AlwaysOnTopLabelMouseExit" MouseDown="AlwaysOnTopLabelMouseDown" MouseUp="AlwaysOnTopLabelMouseUp" ToolTip="Always On Top">
            <Label.Background>
                <ImageBrush ImageSource="Resources/Images/Buttons/AlwaysOnTopOff.png"/>
            </Label.Background>
        </Label>

    </Grid>
</Window>
